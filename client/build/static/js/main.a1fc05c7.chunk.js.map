{"version":3,"sources":["components/About/_Logo.png","utils/API.js","pages/Member.js","components/Header/index.js","components/Navbar/index.js","components/About/index.js","components/Contact/index.js","components/Footer/index.js","components/Description/index.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","userData","axios","post","Member","props","onChangeUsername","bind","onChangePasswordSignup","onChangePasswordLogin","onChangeEmailSignup","onChangeEmailLogin","userSignup","userLogin","state","username","passwordSignup","passwordLogin","emailSignup","emailLogin","e","this","setState","target","value","preventDefault","userObjectSignup","password","email","API","then","res","console","log","data","catch","err","userObjectLogin","onChange","name","onClick","Component","Header","className","Nav","href","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","About","src","picture","Contact","Footer","Description","class","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.a1fc05c7.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/_Logo.37cd571e.png\";","import axios from \"axios\";\r\n\r\nexport default {\r\n  signUp: function (userData) {\r\n    return axios.post(\"/api/registerUser\", userData)\r\n  },\r\n\r\n  login: function (userData) {\r\n    return axios.post(\"/api/login\", userData)\r\n  }\r\n}","import React, { Component } from \"react\";\r\nimport API from \"../utils/API\"\r\n\r\nclass Member extends Component {\r\n// create constructor that takes in props\r\n  constructor(props) {\r\n    super(props)\r\n\r\n// will read the changes made in each input field on this page\r\n    this.onChangeUsername = this.onChangeUsername.bind(this);\r\n    this.onChangePasswordSignup = this.onChangePasswordSignup.bind(this);\r\n    this.onChangePasswordLogin = this.onChangePasswordLogin.bind(this);\r\n    this.onChangeEmailSignup = this.onChangeEmailSignup.bind(this);\r\n    this.onChangeEmailLogin = this.onChangeEmailLogin.bind(this);\r\n    this.userSignup = this.userSignup.bind(this);\r\n    this.userLogin = this.userLogin.bind(this);\r\n  \r\n    // initial state to set keyname and values\r\n    this.state = {\r\n      username: \"\",\r\n      passwordSignup: \"\",\r\n      passwordLogin: \"\",\r\n      emailSignup: \"\",\r\n      emailLogin: \"\"\r\n    };\r\n  }\r\n\r\n  // function to listen for username input\r\n  onChangeUsername(e) {\r\n    this.setState({username: e.target.value})\r\n  }\r\n\r\n\r\n  // function to listen for password input\r\n  onChangePasswordSignup(e) {\r\n    this.setState({passwordSignup: e.target.value})\r\n  }\r\n\r\n  onChangePasswordLogin(e) {\r\n    this.setState({passwordLogin: e.target.value})\r\n  }\r\n\r\n  // function to listen for email input\r\n  onChangeEmailSignup(e) {\r\n    this.setState({emailSignup: e.target.value})\r\n  }\r\n\r\n  onChangeEmailLogin(e) {\r\n    this.setState({emailLogin: e.target.value})\r\n  }\r\n\r\n  // Listen for click. Next create a userObject that contains the username, password, and email states from this page. Next send this userObject to the route setup by the backend to interact with the database. Lastly, reset the state of the input boxes to empty.\r\nuserSignup(e) {\r\n  e.preventDefault()\r\n\r\nvar userObjectSignup = {\r\n  username: this.state.username,\r\n  password: this.state.passwordSignup,\r\n  email: this.state.emailSignup\r\n};\r\n\r\n  API.signUp(userObjectSignup).then(res => {\r\n   console.log(res.data)\r\n    })\r\n    .catch(err => console.log(err));\r\n\r\n    this.setState({username: \"\", passwordSignup: \"\", emailSignup: \"\"})\r\n    \r\n  };\r\n\r\nuserLogin(e) {\r\n  e.preventDefault()\r\n\r\nvar userObjectLogin = {\r\n  email: this.state.emailLogin,\r\n  password: this.state.passwordLogin\r\n};\r\nconsole.log(userObjectLogin)\r\n  API.login(userObjectLogin).then(res => {\r\n   console.log(res.data)\r\n    })\r\n    .catch(err => console.log(err));\r\n\r\n    this.setState({emailLogin: \"\", passwordLogin: \"\"})\r\n    \r\n  };\r\n\r\nrender() {\r\n  return (\r\n    <div>\r\n      <input onChange={this.onChangeUsername} name=\"username\" value={this.state.username} />\r\n      <input onChange={this.onChangePasswordSignup} name=\"passwordSignup\" value={this.state.passwordSignup} />\r\n      <input onChange={this.onChangeEmailSignup} name=\"emailSignup\" value={this.state.emailSignup} />\r\n\r\n      <button name=\"userSignup\" onClick={this.userSignup}>Sign Up</button>\r\n\r\n      <input onChange={this.onChangeEmailLogin} name=\"emailLogin\" value={this.state.emailLogin} />\r\n      <input onChange={this.onChangePasswordLogin} name=\"passwordLogin\" value={this.state.passwordLogin} />\r\n\r\n      <button name=\"userLogin\" onClick={this.userLogin}>Login</button>\r\n    </div>\r\n  )\r\n\r\n}\r\n}\r\n\r\nexport default Member;","import React from \"react\";\r\nimport style1 from \"./style1.css\"\r\n// import contact from \"../contact.png\"\r\nconst Header = () => {\r\n    return (\r\n        <div className=\"header-wrapper\">\r\n            <div className=\"main-info\">\r\n                <h1>Welcome User</h1>\r\n                <h2>Thank you for choosing Lead Force! We are a start up company that focuses on helping business's grow </h2>\r\n            </div>\r\n\r\n        </div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    )\r\n}\r\nexport default Header;","import React from \"react\";\r\n// import logo from \"../Untitled1.png\"\r\nimport css from \"./style.css\"\r\nfunction Nav() {\r\n    return (\r\n\r\n        <nav className=\"navbar navbar-expand-lg navbar-light \">\r\n            <div className=\"container\">\r\n                <a className=\"navbar-brand\" href=\"#\">Lead Force</a>\r\n                <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                    <span className=\"navbar-toggler-icon\"></span>\r\n                </button>\r\n                {/* <div class=\"w-100\"> */}\r\n                <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                    <ul className=\"navbar-nav ms-auto\">\r\n                        <li className=\"nav-item\">\r\n                            <a className=\"nav-link\" href=\"#\">Home</a>\r\n                        </li>\r\n\r\n\r\n                        <li className=\"nav-item\">\r\n                            <a className=\"nav-link\" href=\"#\">View</a>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <a className=\"nav-link\" href=\"#\">Sign Up</a>\r\n                        </li>\r\n\r\n\r\n                    </ul>\r\n                    {/* </div> */}\r\n                </div>\r\n\r\n            </div>\r\n        </nav>\r\n    );\r\n}\r\n\r\nexport default Nav;\r\n","import React from \"react\";\r\nimport style from \"./style.css\";\r\nimport picture from \"./_Logo.png\";\r\n\r\nfunction About() {\r\n    return (\r\n        <div className=\"container-1\">\r\n            <div id=\"about\"></div>\r\n            <div className=\"about\">\r\n                <img src={picture} className=\"profile-pic\"></img>\r\n                {/* <h1 class=\"about-Name\">Lead Force</h1> */}\r\n                {/* <div className=\"line-break\"></div> */}\r\n                {/* <h2>| Lead Management System |</h2>\r\n                <p>We are Lead Force!</p> */}\r\n            </div>\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default About","import React from \"react\";\r\nimport style1 from \"./style1.css\"\r\n// import contact from \"../contact.png\"\r\nconst Contact = () => {\r\n    return (\r\n        <div className=\"header-wrapper\">\r\n            <div className=\"contact-box\">\r\n             \r\n                {/* <img src={contact} class=\"contact-pic\"></img> */}\r\n                <h1>Contact Us</h1>\r\n                <div className=\"line-break1\"></div>\r\n                <div className=\"row\">\r\n                    {/* d-flex justify-content-center */}\r\n                    <div className=\"col-6\">\r\n                        <div className=\"social-icons\">\r\n                            <a href=\"https://github.com/austinwoo123\" target=\"_blank\"><i className=\"fab fa-github-square\"></i></a>\r\n                            <a href=\"https://www.linkedin.com/in/awoo95/\" target=\"_blank\"><i className=\"fab fa-linkedin\"></i></a>\r\n                            <a href=\"mailto:awoo004@ucr.edu\" target=\"_blank\"><i className=\"fas fa-envelope\"></i></a>\r\n                        </div>\r\n                        <div className=\"line-break2\"></div>\r\n                        <h3>   Austin Woo   </h3>\r\n\r\n                        {/* <h3>Email: awoo004@ucr.edu</h3> */}\r\n                    </div>\r\n\r\n                    <div className=\"col-6\" >\r\n                        <div className=\"social-icons\">\r\n                            <a href=\"https://github.com/vincent-nguyen8931\" target=\"_blank\"><i className=\"fab fa-github-square\"></i></a>\r\n                            <a href=\"https://www.linkedin.com/in/vincent-nguyen-74226a107/\" target=\"_blank\"><i className=\"fab fa-linkedin\"></i></a>\r\n                            <a href=\"mailto:vincent.nguyen8931@gmail.com\" target=\"_blank\"><i className=\"fas fa-envelope\"></i></a>\r\n                        </div>\r\n                        <div className=\"line-break2\"></div>\r\n                        <h3> Vincent Nguyen </h3>\r\n\r\n                        {/* <h3>Email: vincent.nguyen8931@gmail.com</h3> */}\r\n                    </div>\r\n                </div>\r\n\r\n            </div >\r\n        </div>\r\n\r\n    )\r\n}\r\nexport default Contact;","import React from \"react\";\r\nimport style from \"./style.css\"\r\nfunction Footer() {\r\n    return (\r\n\r\n        <nav className=\"navbar1 navbar-light bg-light\">\r\n            <span className=\"navbar-brand1 mb-0 h1\">LeadForce </span>\r\n        </nav>\r\n    )\r\n}\r\n\r\n\r\nexport default Footer;","import React from \"react\";\r\nimport style from \"./style.css\";\r\n// import picture from \"./_Logo.png\";\r\n\r\nfunction Description() {\r\n    return (\r\n        <div className=\"container-2\">\r\n            <div id=\"about\"></div>\r\n            <div className=\"about\">\r\n                {/* <img src={picture} className=\"profile-pic\"></img> */}\r\n                <h1 class=\"about-Name\">Lead Force</h1>\r\n                <div className=\"line-break\"></div>\r\n                <h2 className=\"LogoName\">| Lead Management System |</h2>\r\n                <p>We are Lead Force!</p>\r\n            </div>\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Description","import React, {Router, Route} from 'react';\r\nimport Member from \"./pages/Member\"\r\n// import Main from \"./pages/main\";\r\n// import Jumbotron from \"./components/jumbotron\"\r\nimport Header from \"./components/Header\";\r\nimport Nav from \"./components/Navbar\";\r\nimport About from \"./components/About\";\r\nimport Contact from \"./components/Contact\"\r\nimport Footer from \"./components/Footer\";\r\nimport Description from \"./components/Description\";\r\nfunction App() {\r\n  return (\r\n    <div>\r\n      <Member />\r\n      <Nav />\r\n      <Header />\r\n      <About />\r\n      <Description />\r\n      <Contact />\r\n      <Footer />\r\n      \r\n    {/* <Route exact path=\"/\"></Route> */}\r\n\r\n      {/* <Jumbotron />\r\n      <Main /> */}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}