{"version":3,"sources":["components/Header/index.js","components/Navbar/index.js","components/Footer/index.js","components/Description/index.js","pages/Home/index.js","components/About/index.js","utils/API.js","components/Form/index.js","components/LeadHeader/index.js","components/UpdateButton/index.js","components/DeleteButton/index.js","components/TableData/index.js","components/Table/index.js","pages/Members/index.js","components/Redirect/index.js","pages/Login/index.js","App.js","serviceWorker.js","index.js"],"names":["Header","className","id","Nav","href","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","to","Footer","class","Date","getFullYear","Description","Home","About","userData","axios","post","get","console","log","put","delete","Input","props","LeadHeader","onChangeState","bind","addLead","state","firstName","lastName","phone","email","e","key","this","setState","target","value","preventDefault","userObjectLead","API","then","res","data","catch","err","tabindex","role","aria-labelledby","aria-hidden","onChange","data-dismiss","onClick","Component","UpdateButton","updateLead","DeleteButton","deleteLead","TableData","style","width","Table","leads","getEveryLead","scope","map","item","Members","withRouter","useHistory","push","Login","userSignup","userLogin","username","passwordSignup","passwordLogin","emailSignup","emailLogin","userObjectSignup","password","userObjectLogin","redirect","placeholder","name","App","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.62fac687.chunk.js","sourcesContent":["import React from \"react\";\nimport style1 from \"./style1.css\"\n\nexport default function Header() {\n    return (\n        <div className=\"jumbotron jumbotron-fluid\" id=\"header\">\n            <div className=\"container\">\n\n                <h1 className=\"about-Name\">Leads Force</h1>\n                {/* <div className=\"line-break\"></div> */}\n                <h2 className=\"Lead-Header\">| Lead Management System |</h2>\n                {/* <p>We are Lead Force!</p> */}\n            </div>\n        </div>\n    )\n}","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport css from \"./style.css\"\n\nexport default function Nav() {\n  return (\n    <nav className=\"navbar navbar-expand-lg navbar-light \">\n      <div className=\"container\">\n        <a className=\"navbar-brand\" href=\"#\">Lead Force</a>\n        <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n          <span className=\"navbar-toggler-icon\"></span>\n        </button>\n        {/* <div class=\"w-100\"> */}\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n          <ul className=\"navbar-nav ms-auto\">\n            <li className=\"nav-item\">\n              <Link className=\"nav-link\" to=\"/\">Home</Link>\n            </li>\n            <li className=\"nav-item\">\n              <Link className=\"nav-link\" to=\"/login\">Sign Up</Link>\n            </li>\n          </ul>\n        </div>\n      </div>\n    </nav>\n  );\n}\n","import React from \"react\";\nimport style from \"./style.css\"\n\nexport default function Footer() {\n  return (\n    <div>\n      <div className=\"container\">\n        <div className=\"card bg-primary text-white\">\n          <div className=\"row\">\n            <div className=\"col\">\n              <div className=\"col-6\">\n                <h5 className=\"card-title\">Austin Woo</h5>\n                <div class='footer-link-items'>\n                  <a href='https://enigmatic-castle-29617.herokuapp.com/'>Portfolio</a> <br />\n                  <a href='https://github.com/austinwoo123'>Github</a> <br />\n                  <a href='https://www.linkedin.com/in/awoo95/'>LinkedIn</a> <br />\n                  <a href='mailto: awoo004@ucr.edu'>Email</a>\n                </div>\n              </div>\n            </div>\n            <div className=\"col\">\n              <div className=\"col-6\">\n                <h5 className=\"card-title\">Vincent Nguyen</h5>\n                <div class='footer-link-items'>\n                  <a href='https://vincent-nguyen8931.github.io/react-portfolio/'>Portfolio</a> <br />\n                  <a href='https://github.com/vincent-nguyen8931'>Github</a> <br />\n                  <a href='https://www.linkedin.com/in/vincent-nguyen-74226a107/'>LinkedIn</a> <br />\n                  <a href='mailto: vincent.nguyen8931@gmail.com'>Email</a>\n                </div>\n              </div>\n            </div>\n            <small className='website-rights'> &copy;{new Date().getFullYear()} Leads Force | All rights reserved</small>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}","import React from \"react\";\nimport style from \"./style.css\";\n\nexport default function Description() {\n    return (\n        <div className=\"jumbotron jumbotron-fluid\" id=\"description\">\n            <div className=\"container\" id=\"description1\">\n                <div className=\"question1\">\n                    <h2 className=\"question-1\">WHAT IS LEADS FORCE?</h2>\n                    <p>Leads Force is a new company that provides a platform for customer relationship managment (also known as a CRM). It is an application that tracks the interaction between business/organizations and customers. At our current stage in development, Lead force is built specifically to manage leads. We are a start up company that focuses on helping business's grow.</p>\n                </div>\n                <div className=\"question2\">\n                    <h2 className=\"question-2\" >WHAT ARE LEADS?</h2>\n                    <p>A lead is a person who is interested in the product or service that your company is offering.A Company can generate leads from a variety of different sources that can make it very hard to manage, and this is where a CRM becomes very useful. Lead generation is a crucial part of any sales organization because it is the driving force of your business.  </p>\n                </div>\n                <h2 className=\"question-3\">WHY CHOOSE LEADS FORCE?</h2>\n                <p>Leads force is a simple-to-use application that was designed to administer and track each relatinship of potential customers and to help organize all your leads into one database. Leads force is a great tool that your business can use!  </p>\n\n            </div>\n        </div>\n    )\n}","import Header from \"../../components/Header\";\nimport Nav from \"../../components/Navbar\";\nimport Footer from \"../../components/Footer\";\nimport Description from \"../../components/Description\";\nimport React from \"react\";\n\nexport default function Home() {\n  return (\n    <div>\n      <Nav />\n      <Header />\n      <Description />\n      <Footer />\n    </div>\n  )\n}","import React from \"react\";\nimport style from \"./style.css\";\n\nexport default function About() {\n    return (\n        <div className=\"jumbotron jumbotron-fluid\" id=\"about\">\n            <div className=\"container\">\n            </div>\n        </div>\n    )\n}","import axios from \"axios\";\n\nexport default {\n  signUp: function (userData) {\n    return axios.post(\"/api/registerUser\", userData)\n  },\n\n  login: function (userData) {\n    return (\n      axios.post(\"/api/login\", userData))\n  },\n\n  addLead: function (userData) {\n    return (\n      axios.post(\"/api/leads\", userData))\n  },\n\n  getAllLeads: function () {\n    return (\n      axios.get(\"/api/leads/\"))\n  },\n\n  getLead: function (userData) {\n    return (\n      axios.get(\"/api/leads/:id\", userData))\n  },\n\n  updateLead: function (id, userData) {\n    console.log(\"axios call of update.\")\n    return (\n      axios.put(\"/api/leads/\" + id, userData))\n  },\n\n  deleteLead: function (id, userData) {\n    return (\n      axios.delete(\"/api/leads/\" + id, userData))\n  }\n}","import React from \"react\";\nimport style from \"./style.css\";\n\n// This file exports the Input, TextArea, and FormBtn components\n\nexport function Input(props) {\n    return (\n        <div className=\"form-group\">\n            <input className=\"addLeads\" {...props} />\n        </div>\n    );\n}\n\nexport function TextArea(props) {\n    return (\n        <div className=\"form-group\">\n            <textarea className=\"form-control\" type=\"text\" rows=\"10\" {...props} />\n        </div>\n    );\n}\n\nexport function FormBtn(props) {\n    return (\n        <button {...props} style={{ float: \"right\", marginBottom: 10 }} className=\"btn btn-success\">\n            {props.children}\n        </button>\n    );\n}","import React, { Component } from \"react\";\nimport style from \"./style.css\"\nimport API from \"../../utils/API\";\nimport { Input } from \"../Form\";\n\nexport default class LeadHeader extends Component {\n  // create constructor that takes in props\n  constructor(props) {\n    super(props)\n\n    // will read the changes made in each input field on this page\n    this.onChangeState = this.onChangeState.bind(this);\n    this.addLead = this.addLead.bind(this);\n\n    // initial state to set keyname and values\n    this.state = {\n      firstName: \"\",\n      lastName: \"\",\n      phone: \"\",\n      email: \"\"\n    };\n  }\n\n  // function to listen for username input, password input on signup + login, & email input on signup + login\n  onChangeState(e, key) {\n    this.setState({ [key]: e.target.value })\n  }\n\n  addLead(e) {\n    e.preventDefault()\n\n    var userObjectLead = {\n      firstName: this.state.firstName,\n      lastName: this.state.lastName,\n      phone: this.state.phone,\n      email: this.state.email\n    };\n\n    API.addLead(userObjectLead).then(res => {\n      console.log(res.data)\n    })\n      .catch(err => console.log(err));\n  };\n\n  render() {\n    return (\n      <div className=\"jumbotron3\">\n        <div className=\"modal fade\" id=\"addLeads\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalCenterTitle\" aria-hidden=\"true\">\n          <div className=\"modal-dialog modal-dialog-centered\" role=\"document\">\n            <div className=\"modal-content\">\n              <div className=\"modal-body\">\n                <h3>Add Leads</h3>\n                <p>First name: </p>\n                <Input onChange={(e) => this.onChangeState(e, \"firstName\")} value={this.state.firstName} />\n                <p>Last name: </p>\n                <Input onChange={(e) => this.onChangeState(e, \"lastName\")} value={this.state.lastName} />\n                <p>Phone Number: </p>\n                <Input onChange={(e) => this.onChangeState(e, \"phone\")} value={this.state.phone} />\n                <p>Email Address: </p>\n                <Input onChange={(e) => this.onChangeState(e, \"email\")} value={this.state.email} />\n              </div>\n              <div className=\"modal-footer\">\n                <button type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\n                <button type=\"button\" onClick={this.addLead} className=\"btn btn-primary\">Save changes</button>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className=\"row1\">\n          <div className=\"col-sm-12\">\n            <div className=\"card1\">\n              <div className=\"card-body\">\n                <h2 className=\"Leadheader\">Leads</h2>\n                <button type=\"button\" class=\"btn1 btn-primary\" data-toggle=\"modal\" data-target=\"#addLeads\">\n                  Add Leads\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}","import React, { Component } from \"react\";\nimport API from \"../../utils/API\";\nimport { Input } from \"../Form\";\n\nexport default class UpdateButton extends Component {\n// create constructor that takes in props\nconstructor(props) {\n  super(props)\n\n  // will read the changes made in each input field on this page\n  this.onChangeState = this.onChangeState.bind(this);\n  this.updateLead = this.updateLead.bind(this);\n\n  // initial state to set keyname and values\n  this.state = {\n    firstName: \"\",\n    lastName: \"\",\n    phone: \"\",\n    email: \"\"\n  };\n}\n\n// function to listen for first name, last name, phone, and email inputs for updating\nonChangeState(e, key) {\n  this.setState({ [key]: e.target.value })\n}\n\n// creates the userObjectLead variable to take in the stateful values defined above. The api call takes in the id of the row and this userObjectLead variable and updates the mySQL database. \nupdateLead(e) {\n  e.preventDefault()\n\n  var userObjectLead = {\n    firstName: this.state.firstName,\n    lastName: this.state.lastName,\n    phone: this.state.phone,\n    email: this.state.email\n  };\n\n  API.updateLead(this.props.id, userObjectLead).then(res => {\n    console.log(res.data)\n  })\n    .catch(err => console.log(err));\n};\n\n  render() {\n    return (\n      // Modal that appears when updating the lead's information upon clicking update button. It contains input for first name, last name, phone, and email. Once the save changes button is clicked, the updateLead function will run. \n      <div>\n        <div className=\"modal fade\" id=\"updateLeads\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalCenterTitle\" aria-hidden=\"true\">\n          <div className=\"modal-dialog modal-dialog-centered\" role=\"document\">\n            <div className=\"modal-content\">\n              <div className=\"modal-body\">\n                <h3>Update Leads</h3>\n                <p>First name: </p>\n                <Input onChange={(e) => this.onChangeState(e, \"firstName\")} value={this.state.firstName} />\n                <p>Last name: </p>\n                <Input onChange={(e) => this.onChangeState(e, \"lastName\")} value={this.state.lastName} />\n                <p>Phone Number: </p>\n                <Input onChange={(e) => this.onChangeState(e, \"phone\")} value={this.state.phone} />\n                <p>Email Address: </p>\n                <Input onChange={(e) => this.onChangeState(e, \"email\")} value={this.state.email} />\n              </div>\n              <div className=\"modal-footer\">\n                <button type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\n                <button type=\"button\" onClick={this.updateLead} className=\"btn btn-primary\">Save changes</button>\n              </div>\n            </div>\n          </div>\n        </div>\n          <div className=\"col-sm-12\">\n            <div className=\"card1\">\n              <div className=\"card-body\">\n                <button type=\"button\" className=\"btn3 btn-primary badge-pill float-right\" value={this.props.id} data-toggle=\"modal\" data-target=\"#updateLeads\">\n                  Update\n                 </button>\n              </div>\n            </div>\n        </div>\n      </div>\n    )\n  }\n}","import React, { Component } from \"react\";\nimport API from \"../../utils/API\";\n\nexport default class DeleteButton extends Component {\n// create constructor that takes in props\nconstructor(props) {\n  super(props)\n\n  // will read the delete lead button click\n  this.deleteLead = this.deleteLead.bind(this);\n}\n\n// Delete lead function that makes api call to the backend\ndeleteLead(e) {\n  e.preventDefault()\n\n  API.deleteLead(this.props.id).then(res => {\n    console.log(res.data)\n  })\n    .catch(err => console.log(err));\n};\n\n  render() {\n    return (\n     <div>\n       <button className=\"btn3 btn-danger badge-pill float-right\" value={this.props.id} onClick={this.deleteLead}>Delete</button>\n     </div>\n    )\n  }\n}","import React from \"react\";\nimport UpdateButton from \"../UpdateButton\";\nimport DeleteButton from \"../DeleteButton\";\n\nexport default function TableData(props) {\n// returns the table information listed per prop. Each button component is given an id to know which row in the database they are interacting with.\n    return (\n        <tr>\n            <td>{props.firstName}</td>\n            <td>{props.lastName}</td>\n            <td>{props.email}</td>\n            <td>{props.phone}</td>\n            <td style={{ width: \"9%\" }}>\n                <UpdateButton id={props.id} />\n                <DeleteButton id={props.id} />\n            </td>\n        </tr>\n    )\n}","import React, { Component } from \"react\";\nimport style from \"./style.css\";\nimport TableData from \"../TableData\";\nimport API from \"../../utils/API\";\n\nexport default class Table extends Component {\n\n  state = {\n    leads: []\n  }\n\n  componentDidMount() {\n    this.getEveryLead()\n  }\n\n  getEveryLead() {\n    API.getAllLeads().then(res => {\n      console.log(res.data)\n      this.setState({ leads: res.data })\n    })\n      .catch(err => console.log(err));\n  }\n\n  render() {\n    return (\n      <div className=\"table1\">\n        <table className=\"table table-bordered table-hover\">\n          <thead>\n            <tr>\n              <th scope=\"col\">First Name</th>\n              <th scope=\"col\">Last Name</th>\n              <th scope=\"col\">Email Address</th>\n              <th scope=\"col\">Phone Number</th>\n              <th scope=\"col\">Action</th>\n            </tr>\n          </thead>\n          <tbody>\n            {this.state.leads.map(item =>\n              <TableData\n                id={item.id}\n                firstName={item.firstName}\n                lastName={item.lastName}\n                email={item.email}\n                phone={item.phone}\n              />)}\n          </tbody>\n        </table>\n      </div >\n    )\n  }\n}\n","import React, { Component } from \"react\";\nimport Navbar from \"../../components/Navbar\";\nimport About from \"../../components/About\";\nimport LeadHeader from \"../../components/LeadHeader\";\nimport Table from \"../../components/Table\";\nimport Footer from \"../../components/Footer\";\n\nexport default class Members extends Component {\n\n  render() {\n    return (\n      <div>\n        <Navbar />\n        <About />\n        <LeadHeader />\n        <Table />\n        <Footer />\n      </div>\n    )\n  }\n}","import React from \"react\";\nimport { useHistory, withRouter } from \"react-router-dom\";\n\nfunction Redirect(props) {\n  var history = useHistory();\n  history.push(\"/members\");\n  return (\n    <div>\n    </div>\n  )\n}\n\nexport default withRouter(Redirect);","import React, { Component } from \"react\";\nimport style from \"./Login.css\";\nimport Redirect from \"../../components/Redirect\";\nimport Nav from \"../../components/Navbar\";\nimport API from \"../../utils/API\";\nimport Footer from \"../../components/Footer\";\n\nexport default class Login extends Component {\n  // create constructor that takes in props\n  constructor(props) {\n    super(props)\n\n    // will read the changes made in each input field on this page and onChangeState function\n    this.userSignup = this.userSignup.bind(this);\n    this.userLogin = this.userLogin.bind(this);\n    this.onChangeState = this.onChangeState.bind(this);\n\n    // initial state to set keyname and values\n    this.state = {\n      username: \"\",\n      passwordSignup: \"\",\n      passwordLogin: \"\",\n      emailSignup: \"\",\n      emailLogin: \"\"\n    };\n  }\n\n  // function to listen for username input, password input on signup + login, & email input on signup + login\n  onChangeState(e, key) {\n    this.setState({ [key]: e.target.value })\n  }\n\n  // Listen for click for user signup. Next create a userObjectSignup that contains the username, password, and email states from this page. Next send this userObjectSignup to the route setup by the backend to interact with the database. Lastly, reset the state of the input boxes to empty.\n  userSignup(e) {\n    e.preventDefault()\n\n    var userObjectSignup = {\n      username: this.state.username,\n      password: this.state.passwordSignup,\n      email: this.state.emailSignup\n    };\n\n    API.signUp(userObjectSignup).then(res => {\n      console.log(res.data)\n    })\n      .catch(err => console.log(err));\n\n    this.setState({ username: \"\", passwordSignup: \"\", emailSignup: \"\" })\n\n  };\n\n  // Listen for click for user login. Next create a userObjectLogin that contains the email, and password states from this page. Next, send this userObjectLogin to the route setup by the backend to interact with the database. Then, the user will be rerouted to the members page. Lastly, reset the state of the input boxes to empty.\n  userLogin(e) {\n    e.preventDefault()\n    var userObjectLogin = {\n      email: this.state.emailLogin,\n      password: this.state.passwordLogin\n    };\n    API.login(userObjectLogin).then(res => {\n      console.log(res.data)\n      this.setState({ redirect: true })\n    })\n      .catch(err => console.log(err));\n\n    this.setState({ emailLogin: \"\", passwordLogin: \"\" })\n  };\n\n  render() {\n    return (\n      <div className=\"loginstyle\">\n        <Nav />\n        <div className=\"row\">\n          <div className=\"col-6\" >\n            <div className=\"div-login\">\n              <h2 className=\"signup\">Signup</h2>\n              <input placeholder=\"Username\" onChange={(e) => this.onChangeState(e, \"username\")} name=\"username\" value={this.state.username} />\n              <input placeholder=\"Password\" onChange={(e) => this.onChangeState(e, \"passwordSignup\")} name=\"passwordSignup\" value={this.state.passwordSignup} />\n              <input placeholder=\"Email Address\" onChange={(e) => this.onChangeState(e, \"emailSignup\")} name=\"emailSignup\" value={this.state.emailSignup} />\n              <button name=\"userSignup\" onClick={this.userSignup}>Sign Up</button>\n            </div>\n          </div>\n          <div className=\"col-6\" >\n            <div className=\"div-login\">\n              <h2 className=\"login\">Login</h2>\n              <input placeholder=\"Email Address\" onChange={(e) => this.onChangeState(e, \"emailLogin\")} name=\"emailLogin\" value={this.state.emailLogin} />\n              <input placeholder=\"Password\" onChange={(e) => this.onChangeState(e, \"passwordLogin\")} name=\"passwordLogin\" value={this.state.passwordLogin} />\n              <button name=\"userLogin\" onClick={this.userLogin}>Login</button>\n            </div>\n          </div>\n        </div>\n        <Footer />\n        {this.state.redirect ? <Redirect /> : null}\n      </div>\n    )\n  }\n}","import React from 'react';\nimport Home from \"./pages/Home\";\nimport Members from \"./pages/Members\";\nimport Login from \"./pages/Login\";\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\n\n// using BrowserRouter, route the user to following pages when they reach the specific paths listed in each route. \nexport default function App() {\n  return (\n    <BrowserRouter>\n      <div>\n        <Switch>\n          <Route exact path=\"/members\" component={Members} />\n          <Route exact path=\"/login\" component={Login} />\n          <Route exact path=\"/\" component={Home} />\n        </Switch>\n      </div>\n    </BrowserRouter>\n  );\n}","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}